/**
 * @module RaftStateMachine
 */ /** */

import InvalidStateParamsError from "../errors/invalid-state-params";
import AxisStateMachine, {AxisState, AxisStateParams} from "./axis";
import {CoordinateModes} from "../enums";

export interface StandbyAxisStateParams extends AxisStateParams {
    standby: boolean
}

export class StandbyAxisState extends AxisState {

    public readonly standby: boolean;

    public constructor (params: StandbyAxisStateParams) {
        super(params);
        this.standby = params.standby;
    }

    public clone(): StandbyAxisState {
        return new StandbyAxisState({
            position: this.position,
            standby: this.standby
        });
    }

    public toString(): string {
        return "StandbyAxisState";
    }

}

export default class StandbyAxisStateMachine extends AxisStateMachine {

    protected current: StandbyAxisState;

    public constructor (initialState: StandbyAxisState) {
        super(initialState);
    }

    public insertState(state: StandbyAxisState): void {
        super.insertState(state);
    }

    public clone(): StandbyAxisStateMachine {
        let copy = new StandbyAxisStateMachine(this.current);
        this.deepCopyStatesTo(copy);
        return copy;
    }

    public toString(): string {
        return "StandbyAxisStateMachine";
    }

}
