/**
 * @module RaftInstruction
 */ /** */

import RaftInstruction, {RaftInstructionParams} from "./base";
import InvalidArgumentError from "../errors/invalid-argument";
import {validateInt, validateNumber} from "../common/validation";

export interface SetFanInstructionParams extends RaftInstructionParams {
    isToggle: boolean,
    fanNumber?: number,
    value?: number | boolean
}

export default class SetFanInstruction extends RaftInstruction {

    readonly fanNumber: number;
    readonly value: number;
    readonly isToggle: boolean;

    constructor (params: SetFanInstructionParams) {
        if (params.isToggle === undefined) {
            throw new InvalidArgumentError("isToggle value missing from arguments");
        }
        if (params.fanNumber !== undefined && (!validateInt(params.fanNumber) || params.fanNumber < 0)) {
            throw new InvalidArgumentError("Invalid fanNumber '" + params.fanNumber + "' supplied as argument");
        }
        super(params);
        this.fanNumber = (params.fanNumber === undefined ? null : params.fanNumber);
        if (params.isToggle) {
            this.isToggle = true;
            this.value = params.value ? 1 : 0;
        } else {
            this.isToggle = false;
            if (typeof params.value === "boolean") {
                this.value = params.value ? 1 : 0
            } else if (params.value === undefined) {
                this.value = null;
            } else if (validateNumber(params.value)) {
                this.value = params.value
            } else {
                throw new InvalidArgumentError("Invalid value '" + params.value + "' supplied as argument");
            }
        }
    }

    toString(): string {
        return "SetFanInstruction";
    }

}
