/**
 * @module RaftInstruction
 */ /** */

import InvalidArgumentError from "../errors/invalid-argument";
import RaftInstruction, {RaftInstructionParams} from "./base";
import {validateNumber} from "../common/validation";

export interface SetLightInstructionParams extends RaftInstructionParams {
    r?: number
    g?: number
    b?: number
}

export default class SetLightInstruction extends RaftInstruction {

    readonly r: number;
    readonly g: number;
    readonly b: number;

    constructor (params: SetLightInstructionParams) {
        if (!validateNumber(params.r) || params.r < 0) {
            throw new InvalidArgumentError("Invalid R value '" + params.r + "' supplied as argument");
        }
        if (!validateNumber(params.g) || params.g < 0) {
            throw new InvalidArgumentError("Invalid G value '" + params.g + "' supplied as argument");
        }
        if (!validateNumber(params.b) || params.b < 0) {
            throw new InvalidArgumentError("Invalid B value '" + params.b + "' supplied as argument");
        }
        super(params);
        this.r = params.r;
        this.g = params.g;
        this.b = params.b;
    }

    toString(): string {
        return "SetLightInstruction";
    }

}
