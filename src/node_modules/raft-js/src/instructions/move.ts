/**
 * @module RaftInstruction
 */ /** */

import {validateNumber} from "../common/validation";
import InvalidArgumentError from "../errors/invalid-argument";
import RaftInstruction, {RaftInstructionParams} from "./base";

export interface MoveInstructionParams extends RaftInstructionParams {
    extrusion?: number,
    feedrate?: number
}

/**
 * Move
 * <p>Move, with an optional extrusion value and an optional feedrate.</p>
 */
export default class MoveInstruction extends RaftInstruction {

    readonly extrusion: number;
    readonly feedrate: number;

    constructor (params: MoveInstructionParams) {
        if (params.extrusion !== undefined && !validateNumber(params.extrusion)) {
            throw new InvalidArgumentError("Invalid extrusion value '" + params.extrusion + "' supplied as argument");
        }
        if (params.feedrate !== undefined && !validateNumber(params.feedrate)) {
            throw new InvalidArgumentError("Invalid feedrate value '" + params.feedrate + "' supplied as argument");
        }
        super(params);
        this.extrusion = (params.extrusion === undefined ? null : params.extrusion);
        this.feedrate = (params.feedrate === undefined ? null : params.feedrate);
    }

    clone(): MoveInstruction {
        return new MoveInstruction({
            extrusion: this.extrusion,
            feedrate: this.feedrate
        });
    }

    toString(): string {
        return "MoveInstruction";
    }

}
