/**
 * @module RaftInstruction
 */ /** */

import InvalidArgumentError from "../errors/invalid-argument";
import OEMInstruction, {OEMInstructionParams} from "./oem";
import {validateNumber} from "../common/validation";

export interface OHotSwapDataInstructionParams extends OEMInstructionParams {
    drive: number
    length: number
    materialIndex: number
}

export default class OHotSwapDataInstruction extends OEMInstruction {

    readonly drive: number;
    readonly length: number;
    readonly materialIndex: number;

    constructor (params: OHotSwapDataInstructionParams) {
        if (!validateNumber(params.drive) || params.drive < 0) {
            throw new InvalidArgumentError("Invalid drive '" + params.drive + "' supplied as argument");
        }
        if (!validateNumber(params.length) || params.length <= 0) {
            throw new InvalidArgumentError("Invalid length '" + params.length + "' supplied as argument");
        }
        if (!validateNumber(params.materialIndex) || params.materialIndex <= 0) {
            throw new InvalidArgumentError("Invalid material index '" + params.materialIndex + "' supplied as argument");
        }
        super(params);
        this.drive = params.drive;
        this.length = params.length;
        this.materialIndex = params.materialIndex;
    }

    toString(): string {
        return "OHotSwapDataInstruction";
    }

}
