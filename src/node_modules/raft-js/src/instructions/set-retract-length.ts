/**
 * @module RaftInstruction
 */ /** */

import {validateNumber} from "../common/validation";
import InvalidArgumentError from "../errors/invalid-argument";
import RaftInstruction, {RaftInstructionParams} from "./base";

export interface SetRetractLengthInstructionParams extends RaftInstructionParams {
    retractLength?: number,
    unretractLengthOffset?: number,
    retractFeedrate?: number,
    unretractFeedrate?: number,
    zLift?: number
}

export default class SetRetractLengthInstruction extends RaftInstruction {

    readonly retractLength: number;
    readonly unretractLengthOffset: number;
    readonly retractFeedrate: number;
    readonly unretractFeedrate: number;
    readonly zLift: number;

    constructor (params: SetRetractLengthInstructionParams) {
        if (params.unretractLengthOffset !== undefined && (!validateNumber(params.retractLength) || params.retractLength < 0)) {
            throw new InvalidArgumentError("Invalid retractLength '" + params.retractLength + "' supplied as argument");
        }
        if (params.unretractLengthOffset !== undefined && (!validateNumber(params.retractFeedrate) || params.retractFeedrate <= 0)) {
            throw new InvalidArgumentError("Invalid retractFeedrate '" + params.retractFeedrate + "' supplied as argument");
        }
        if (params.unretractLengthOffset !== undefined && !validateNumber(params.unretractLengthOffset)) {
            throw new InvalidArgumentError("Invalid unretractLengthOffset '" + params.unretractLengthOffset + "' supplied as argument");
        }
        if (params.unretractFeedrate !== undefined && (!validateNumber(params.unretractFeedrate) || params.unretractFeedrate <= 0)) {
            throw new InvalidArgumentError("Invalid unretractFeedrate '" + params.unretractFeedrate + "' supplied as argument");
        }
        if (params.zLift !== undefined && (!validateNumber(params.zLift) || params.zLift < 0)) {
            throw new InvalidArgumentError("Invalid zLift '" + params.zLift + "' supplied as argument");
        }
        super(params);
        this.retractLength = (params.retractLength === undefined ? null : params.retractLength);
        this.retractFeedrate = (params.retractFeedrate === undefined ? null : params.retractFeedrate);
        this.unretractLengthOffset = (params.unretractLengthOffset === undefined ? null : params.unretractLengthOffset);
        this.unretractFeedrate = (params.unretractFeedrate === undefined ? null : params.unretractFeedrate);
        this.zLift = (params.zLift === undefined ? null : params.zLift);
    }

    toString(): string {
        return "SetRetractLengthInstruction";
    }

}
