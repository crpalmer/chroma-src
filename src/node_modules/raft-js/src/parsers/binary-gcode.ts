/**
 * @module RaftParser
 */ /** */

import RaftEngine from "../engines/base";
import GCodeParser from "./gcode";
import * as fs from "fs";
import FileTypeError from "../errors/file-type";

abstract class BinaryGCodeParser extends GCodeParser {

    protected binaryHeader: Buffer;

    constructor (engine: RaftEngine) {
        super(engine);
    }

    public readFile(inpath: string): string|Buffer {
        if (!fs.existsSync(inpath)) {
            throw new FileTypeError("Input file path does not exist.");
        }
        let buf: Buffer = fs.readFileSync(inpath);
        let input = buf.toString("ascii", 0x38B0);
        this.binaryHeader = buf.slice(0, 0x38B0);
        return input;
    }

    public writeFile(outpath: string, contents: string|Buffer): void {
        fs.writeFileSync(outpath, this.binaryHeader, {
            encoding: "binary"
        });
        fs.appendFileSync(outpath, contents, {
            encoding: "binary"
        });
    }

    toString(): string {
        return "BinaryGCodeParser";
    }

}
export default BinaryGCodeParser;
