/**
 * @module RaftEngine
 */ /** */

import MarlinEngine, {MarlinEngineOptions} from "./marlin";
import {GCodeLine} from "../parsers/gcode";
import RaftInstruction from "../instructions/base";

export interface UltiGCodeEngineOptions extends MarlinEngineOptions {
}

export default class UltiGCodeEngine extends MarlinEngine {

    public constructor(options: UltiGCodeEngineOptions) {
        options.volumetricExtrusion = true;
        super(options);
    }

    public clone(): UltiGCodeEngine {
        let copy = new UltiGCodeEngine({
            toolheadCount: this.toolheadCount,
            independentExtruders: this.independentExtruders,
            volumetricExtrusion: this.volumetricExtrusion,
            defaultHomeDirectionMax: this.defaultHomeDirectionMax,
            filamentDiameter: this.filamentDiameter,
            initialXYZCoordinateMode: this.stateMachines["x"].getCurrentState().coordinateMode,
            initialExtrusionCoordinateMode: this.stateMachines["extrusion"].getCurrentState().coordinateMode
        });
        this.copyStateMachinesTo(copy);
        return copy;
    }

    public toRaftInstruction(line: GCodeLine): RaftInstruction {

        return super.toRaftInstruction(line);
    }

    public toOutputInstruction(instruction: RaftInstruction): GCodeLine {

        return super.toOutputInstruction(instruction);
    }

    public toString(): string {
        return "UltiGCodeEngine";
    }

}
