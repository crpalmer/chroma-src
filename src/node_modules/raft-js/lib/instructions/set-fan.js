"use strict";
/**
 * @module RaftInstruction
 */ /** */
Object.defineProperty(exports, "__esModule", { value: true });
const base_1 = require("./base");
const invalid_argument_1 = require("../errors/invalid-argument");
const validation_1 = require("../common/validation");
class SetFanInstruction extends base_1.default {
    constructor(params) {
        if (params.isToggle === undefined) {
            throw new invalid_argument_1.default("isToggle value missing from arguments");
        }
        if (params.fanNumber !== undefined && (!validation_1.validateInt(params.fanNumber) || params.fanNumber < 0)) {
            throw new invalid_argument_1.default("Invalid fanNumber '" + params.fanNumber + "' supplied as argument");
        }
        super(params);
        this.fanNumber = (params.fanNumber === undefined ? null : params.fanNumber);
        if (params.isToggle) {
            this.isToggle = true;
            this.value = params.value ? 1 : 0;
        }
        else {
            this.isToggle = false;
            if (typeof params.value === "boolean") {
                this.value = params.value ? 1 : 0;
            }
            else if (params.value === undefined) {
                this.value = null;
            }
            else if (validation_1.validateNumber(params.value)) {
                this.value = params.value;
            }
            else {
                throw new invalid_argument_1.default("Invalid value '" + params.value + "' supplied as argument");
            }
        }
    }
    toString() {
        return "SetFanInstruction";
    }
}
exports.default = SetFanInstruction;
//# sourceMappingURL=set-fan.js.map