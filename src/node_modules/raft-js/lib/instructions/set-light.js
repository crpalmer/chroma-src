"use strict";
/**
 * @module RaftInstruction
 */ /** */
Object.defineProperty(exports, "__esModule", { value: true });
const invalid_argument_1 = require("../errors/invalid-argument");
const base_1 = require("./base");
const validation_1 = require("../common/validation");
class SetLightInstruction extends base_1.default {
    constructor(params) {
        if (!validation_1.validateNumber(params.r) || params.r < 0) {
            throw new invalid_argument_1.default("Invalid R value '" + params.r + "' supplied as argument");
        }
        if (!validation_1.validateNumber(params.g) || params.g < 0) {
            throw new invalid_argument_1.default("Invalid G value '" + params.g + "' supplied as argument");
        }
        if (!validation_1.validateNumber(params.b) || params.b < 0) {
            throw new invalid_argument_1.default("Invalid B value '" + params.b + "' supplied as argument");
        }
        super(params);
        this.r = params.r;
        this.g = params.g;
        this.b = params.b;
    }
    toString() {
        return "SetLightInstruction";
    }
}
exports.default = SetLightInstruction;
//# sourceMappingURL=set-light.js.map