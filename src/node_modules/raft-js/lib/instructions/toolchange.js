"use strict";
/**
 * @module RaftInstruction
 */ /** */
Object.defineProperty(exports, "__esModule", { value: true });
const invalid_argument_1 = require("../errors/invalid-argument");
const base_1 = require("./base");
const validation_1 = require("../common/validation");
class ToolChangeInstruction extends base_1.default {
    constructor(params) {
        if (!validation_1.validateInt(params.toolhead) || params.toolhead < 0) {
            throw new invalid_argument_1.default("Invalid toolhead '" + params.toolhead + "' supplied as argument");
        }
        super(params);
        this.toolhead = params.toolhead;
    }
    toString() {
        return "ToolChangeInstruction";
    }
}
exports.default = ToolChangeInstruction;
//# sourceMappingURL=toolchange.js.map