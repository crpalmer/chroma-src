"use strict";
/**
 * @module RaftInstruction
 */ /** */
Object.defineProperty(exports, "__esModule", { value: true });
const validation_1 = require("../common/validation");
const invalid_argument_1 = require("../errors/invalid-argument");
const move_1 = require("./move");
/**
 * Controlled Arc Move
 * <p>Move in an arc (clockwise or counter-clockwise) from (current X, current Y) to a point (X, Y),
 * with a center point at (current X + I, current Y + J).</p>
 */
class ArcMoveInstruction extends move_1.default {
    constructor(params) {
        if (params.clockwise === undefined) {
            throw new invalid_argument_1.default("Clockwise flag missing from constructor");
        }
        if (!validation_1.validateNumber(params.x)) {
            throw new invalid_argument_1.default("Invalid X value '" + params.x + "' supplied as argument");
        }
        if (!validation_1.validateNumber(params.y)) {
            throw new invalid_argument_1.default("Invalid Y value '" + params.y + "' supplied as argument");
        }
        if (!validation_1.validateNumber(params.i)) {
            throw new invalid_argument_1.default("Invalid I value '" + params.i + "' supplied as argument");
        }
        if (!validation_1.validateNumber(params.j)) {
            throw new invalid_argument_1.default("Invalid J value '" + params.j + "' supplied as argument");
        }
        super(params);
        this.clockwise = !!params.clockwise;
        this.x = params.x;
        this.y = params.y;
        this.i = params.i;
        this.j = params.j;
    }
    toString() {
        return "ArcMoveInstruction";
    }
}
exports.default = ArcMoveInstruction;
//# sourceMappingURL=arc-move.js.map