"use strict";
/**
 * @module RaftInstruction
 */ /** */
Object.defineProperty(exports, "__esModule", { value: true });
const invalid_argument_1 = require("../errors/invalid-argument");
const oem_1 = require("./oem");
const validation_1 = require("../common/validation");
class OHotSwapDataInstruction extends oem_1.default {
    constructor(params) {
        if (!validation_1.validateNumber(params.drive) || params.drive < 0) {
            throw new invalid_argument_1.default("Invalid drive '" + params.drive + "' supplied as argument");
        }
        if (!validation_1.validateNumber(params.length) || params.length <= 0) {
            throw new invalid_argument_1.default("Invalid length '" + params.length + "' supplied as argument");
        }
        if (!validation_1.validateNumber(params.materialIndex) || params.materialIndex <= 0) {
            throw new invalid_argument_1.default("Invalid material index '" + params.materialIndex + "' supplied as argument");
        }
        super(params);
        this.drive = params.drive;
        this.length = params.length;
        this.materialIndex = params.materialIndex;
    }
    toString() {
        return "OHotSwapDataInstruction";
    }
}
exports.default = OHotSwapDataInstruction;
//# sourceMappingURL=o-hot-swap-data.js.map