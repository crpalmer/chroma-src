"use strict";
/**
 * @module RaftInstruction
 */ /** */
Object.defineProperty(exports, "__esModule", { value: true });
const invalid_argument_1 = require("../errors/invalid-argument");
const base_1 = require("./base");
const validation_1 = require("../common/validation");
class SetPotentiometerValueInstruction extends base_1.default {
    constructor(params) {
        if (params.x !== undefined && !validation_1.validateNumber(params.x)) {
            throw new invalid_argument_1.default("Invalid x value '" + params.x + "' supplied as argument");
        }
        if (params.y !== undefined && !validation_1.validateNumber(params.y)) {
            throw new invalid_argument_1.default("Invalid y value '" + params.y + "' supplied as argument");
        }
        if (params.z !== undefined && !validation_1.validateNumber(params.z)) {
            throw new invalid_argument_1.default("Invalid z value '" + params.z + "' supplied as argument");
        }
        if (params.a !== undefined && !validation_1.validateNumber(params.a)) {
            throw new invalid_argument_1.default("Invalid a value '" + params.a + "' supplied as argument");
        }
        if (params.b !== undefined && !validation_1.validateNumber(params.b)) {
            throw new invalid_argument_1.default("Invalid b value '" + params.b + "' supplied as argument");
        }
        super(params);
        this.x = (params.x === undefined ? null : params.x);
        this.y = (params.y === undefined ? null : params.y);
        this.z = (params.z === undefined ? null : params.z);
        this.a = (params.a === undefined ? null : params.a);
        this.b = (params.b === undefined ? null : params.b);
    }
    toString() {
        return "SetPotentiometerValueInstruction";
    }
}
exports.default = SetPotentiometerValueInstruction;
//# sourceMappingURL=set-potentiometer-value.js.map