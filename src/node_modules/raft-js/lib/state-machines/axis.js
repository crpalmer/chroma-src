"use strict";
/**
 * @module RaftStateMachine
 */ /** */
Object.defineProperty(exports, "__esModule", { value: true });
const validation_1 = require("../common/validation");
const invalid_state_params_1 = require("../errors/invalid-state-params");
const base_1 = require("./base");
class AxisState extends base_1.RaftState {
    constructor(params) {
        if (params.position !== null) {
            if (params.position === undefined || !validation_1.validateNumber(params.position)) {
                throw new invalid_state_params_1.default("Invalid position parameter '" + params.position + "' supplied to AxisState");
            }
        }
        super(params);
        this.position = params.position;
    }
    clone() {
        return new AxisState({
            position: this.position
        });
    }
    toString() {
        return "AxisState";
    }
}
exports.AxisState = AxisState;
class AxisStateMachine extends base_1.default {
    constructor(initialState) {
        super(initialState);
    }
    insertState(state) {
        super.insertState(state);
    }
    clone() {
        let copy = new AxisStateMachine(this.current);
        this.deepCopyStatesTo(copy);
        return copy;
    }
    toString() {
        return "AxisStateMachine";
    }
}
exports.default = AxisStateMachine;
//# sourceMappingURL=axis.js.map