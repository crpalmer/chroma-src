"use strict";
/**
 * @module RaftEngine
 */ /** */
Object.defineProperty(exports, "__esModule", { value: true });
const smoothie_1 = require("./smoothie");
const base_1 = require("./base");
const reprap_1 = require("./reprap");
const toggle_light_1 = require("../instructions/toggle-light");
const empty_1 = require("../instructions/empty");
class RepetierEngine extends smoothie_1.default {
    constructor(options) {
        super(options);
    }
    clone() {
        let copy = new RepetierEngine({
            toolheadCount: this.toolheadCount,
            independentExtruders: this.independentExtruders,
            volumetricExtrusion: this.volumetricExtrusion,
            defaultHomeDirectionMax: this.defaultHomeDirectionMax,
            filamentDiameter: this.filamentDiameter,
            initialXYZCoordinateMode: this.stateMachines["x"].getCurrentState().coordinateMode,
            initialExtrusionCoordinateMode: this.stateMachines["extrusion"].getCurrentState().coordinateMode
        });
        this.copyStateMachinesTo(copy);
        return copy;
    }
    toRaftInstruction(line) {
        if (!line.command) {
            return new empty_1.default({
                comment: line.comment
            });
        }
        if (line.command === "G2" || line.command === "G3")
            return base_1.unknownInstruction(line, this.config);
        if (line.command === "M116")
            return reprap_1.fromM116(line);
        if (line.command === "M355")
            return fromM355(line);
        return super.toRaftInstruction(line);
    }
    toOutputInstruction(instruction) {
        if (instruction instanceof toggle_light_1.default)
            return fromToggleLight(instruction);
        return super.toOutputInstruction(instruction);
    }
    toString() {
        return "RepetierEngine";
    }
}
exports.default = RepetierEngine;
/**
 * GCode-to-RaftInstruction translation functions
 */
function fromM355(line) {
    return new toggle_light_1.default({
        on: line.s === 1,
        comment: line.comment
    });
}
/**
 * RaftInstruction-to-GCode translation functions
 */
function fromToggleLight(instruction) {
    return {
        command: "M355",
        s: (instruction.on ? 1 : 0),
        comment: instruction.comment
    };
}
//# sourceMappingURL=repetier.js.map