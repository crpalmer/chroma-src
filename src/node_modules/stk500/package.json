{
  "_args": [
    [
      {
        "raw": "stk500@git+https://github.com/noopkat/js-stk500v1.git#avrgirl",
        "scope": null,
        "escapedName": "stk500",
        "name": "stk500",
        "rawSpec": "git+https://github.com/noopkat/js-stk500v1.git#avrgirl",
        "spec": "git+https://github.com/noopkat/js-stk500v1.git#avrgirl",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:noopkat/js-stk500v1.git#avrgirl",
          "sshUrl": "git+ssh://git@github.com/noopkat/js-stk500v1.git#avrgirl",
          "httpsUrl": "git+https://github.com/noopkat/js-stk500v1.git#avrgirl",
          "gitUrl": "git://github.com/noopkat/js-stk500v1.git#avrgirl",
          "shortcut": "github:noopkat/js-stk500v1#avrgirl",
          "directUrl": "https://raw.githubusercontent.com/noopkat/js-stk500v1/avrgirl/package.json"
        }
      },
      "C:\\Users\\r7200\\Mosaic\\palette-standalone\\app\\node_modules\\avrgirl-arduino"
    ]
  ],
  "_from": "git+https://github.com/noopkat/js-stk500v1.git#avrgirl",
  "_id": "stk500@1.0.4",
  "_inCache": true,
  "_location": "/stk500",
  "_phantomChildren": {},
  "_requested": {
    "raw": "stk500@git+https://github.com/noopkat/js-stk500v1.git#avrgirl",
    "scope": null,
    "escapedName": "stk500",
    "name": "stk500",
    "rawSpec": "git+https://github.com/noopkat/js-stk500v1.git#avrgirl",
    "spec": "git+https://github.com/noopkat/js-stk500v1.git#avrgirl",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:noopkat/js-stk500v1.git#avrgirl",
      "sshUrl": "git+ssh://git@github.com/noopkat/js-stk500v1.git#avrgirl",
      "httpsUrl": "git+https://github.com/noopkat/js-stk500v1.git#avrgirl",
      "gitUrl": "git://github.com/noopkat/js-stk500v1.git#avrgirl",
      "shortcut": "github:noopkat/js-stk500v1#avrgirl",
      "directUrl": "https://raw.githubusercontent.com/noopkat/js-stk500v1/avrgirl/package.json"
    }
  },
  "_requiredBy": [
    "/avrgirl-arduino"
  ],
  "_resolved": "git+https://github.com/noopkat/js-stk500v1.git#e116a1f72abdafc7d57eb0ee58221556d2b5def4",
  "_shasum": "f4ab9a66ea6f2a9440e583df39468676bf533795",
  "_shrinkwrap": null,
  "_spec": "stk500@git+https://github.com/noopkat/js-stk500v1.git#avrgirl",
  "_where": "C:\\Users\\r7200\\Mosaic\\palette-standalone\\app\\node_modules\\avrgirl-arduino",
  "author": {
    "name": "Jacob Rosenthal"
  },
  "bugs": {
    "url": "https://github.com/jacobrosenthal/js-stk500v1/issues"
  },
  "dependencies": {
    "async": "^0.9.0",
    "buffer-equal": "0.0.1"
  },
  "description": "Fully javascript stk500v1 programmer. Allows you to program Arduinos straight from node (or browser for that matter). No more avrdude system calls or using the arduino IDE.",
  "devDependencies": {
    "event-stream": "^3.1.7",
    "intel-hex": "^0.1.1",
    "mocha": "^2.0.1",
    "serialport": "^1.4.0",
    "should": "^4.4.1",
    "sinon": "^1.12.2"
  },
  "directories": {
    "example": "examples"
  },
  "gitHead": "e116a1f72abdafc7d57eb0ee58221556d2b5def4",
  "homepage": "https://github.com/jacobrosenthal/js-stk500v1#readme",
  "keywords": [
    "arduino",
    "stk500",
    "avrdude"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "stk500",
  "optionalDependencies": {},
  "readme": "##stk500\nFully javascript stk500v1 programmer. Allows you to program Arduinos straight from node (or browser for that matter -- see [browserdude](github.com/jacobrosenthal/browserdude). No more avrdude system calls or using the arduino IDE.\n\nHuge thanks to Pinoccio for their stk500v2 browser implementation (for Arduino Megas, etc) from which I stole whole lines of code. We're working to unify our programmers with some sort of overarching module. For now see [js-stk500](https://github.com/Pinoccio/js-stk500) to program Arduino Mega and Pinoccio's\n\n###INSTALL\n```\nnpm install stk500\n```\n\n####Program:\n\nYou need a stream object, commonly [serialport](https://www.npmjs.com/package/serialport) with the correct speed for your chip (115200 for the uno) and path to your device  :\n```\nvar SerialPort = require(\"serialport\");\nvar serialPort = new SerialPort.SerialPort(\"/dev/tty.something\", {\nbaudrate: 115200,\n});\n```\n\nWe've included some examples hexes, and you can parse them with the [intel-hex](https://www.npmjs.com/package/intel-hex):\n```\nvar intel_hex = require('intel-hex');\nvar fs = require('fs');\n\nvar data = fs.readFileSync('arduino-1.0.6/uno/StandardFirmata.cpp.hex', { encoding: 'utf8' });\n\nvar hex = intel_hex.parse(data).data;\n\n```\n\nWith [serialport](https://www.npmjs.com/package/serialport), you need to wait for your open event, but then you can bootload:\n```\nvar Stk500 = require('stk500');\n\nserialPort.on('open', function(){\n\n\tvar board = {\n\t  signature: new Buffer([0x1e, 0x95, 0x0f]),\n\t  pageSize: 128,\n\t  timeout: 400\n\t};\n\n\tStk500.bootload(serialPort, hex, board, function(error){\n\n\t  serialPort.close(function (error) {\n\t    console.log(error);\n\t  });\n\n\t  done(error);\n\t});\n\n});\n\n```\n\n\n###How to get a hex\n\nYou can compile by hand yourself with avrdude if you know your stuff, or you can just steal one from Arduino. First make sure you have verbosity enabled in your Arduino preferences: Arduino Preferences -> check Show verbose output during Compilation. Now when you build you'll see a ton of lines on screen. The last couple lines have what you need:\n```\n/var/folders/zp/bpw8zd0141j5zf7l8m_qtt8w0000gp/T/build6252696906929781517.tmp/Blink.cpp.hex \n\nSketch uses 896 bytes (2%) of program storage space. Maximum is 32,256 bytes.\nGlobal variables use 9 bytes (0%) of dynamic memory, leaving 2,039 bytes for local variables. Maximum is 2,048 bytes.\n```\nGrab that hex file and you're good to go.\n\n###CHANGELOG\n0.0.1 \nfirst\n\n0.0.2\nAdded loading from fs to example, some example hexes from arduino 1.0.6 for Uno, and instructions on how to find a hex file to load.\n\n0.0.3\nBugs squashed leading to much more stable getsync and less attempts necessary to successfuly programmin. Slight refactor in example and clearer console.log messaging.\n\n0.0.4\nSlight require change for browserfy-ability and a few more touchups in example\n\n0.0.5\nFixed instability issue especially in chrome where listeners were not being deregistered\n\n0.0.6\nAdded ability to verify device signature.\n\n1.0.0\n* Nearly complete rearchitecture.\n* Moved away from constructor.\n* Take a stream object instead of an explicit node serial object now, though node serial is a stream so no change for most users.\n* No connect, reset or disconnect anymore, it is now your job to send it a recently reset (opened) connection thats ready to go.\n* Added verify command\n* Added bootload convenience function that takes a board options object\n* Added more examples\n\n1.0.1\nClean up dependencies\n\n1.0.2\nRemove postinstall\n\n1.0.3\n* Better errors\n* More Tests",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jacobrosenthal/js-stk500v1.git"
  },
  "scripts": {
    "test": "mocha --include test/*.js test/*.js --reporter spec"
  },
  "version": "1.0.4"
}
